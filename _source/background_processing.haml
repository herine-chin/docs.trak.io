---
title: Background Processing
---

%h2 Background Processing

%p
  <strong>When the Trak.io API recieves a request it is not processed immediately.</strong> It is
  validated and stored in a queue for processing by a background processor.
  Under normal conditions the background worker will process the request within a
  second or two of being recieved.

%p
  This ensures we can respond to API request as quickly as possible and adds a
  layer of redundency that ensures we can continue to recieve and respond promptly to your
  API requests during periods of unusually high traffic or while we are having
  technical difficulties.

%h3 Validation of Your Requests

%p
  Before requests are queued for processing they are validated to predict any problems
  that may arise during processing. This allows us to respond with the relavent <a href='errors.html'>error
  codes</a> when the request is made.

%p
  Almost all of these validations can be made ahead of processing without any reliance
  on other Trak.io services. Which means we can respond with convidence on whether the
  request is valid or not, with the bare minimum of our infrastructure online.

%p.note
  Whilst we aim to have all of our services up all of the time, the realities of technlogy,
  means we need to pepare for having parts of our system unavailable. <strong>Having
  our API up to recieve your data</strong> regardless of the status of our other systems
  <strong>is our number one priority</strong>.

%h3 "The Benefit of the Doubt"

%p
  The one exception to this is confirming your account API token is valid. This requires a
  call to our database. <strong>In instances where it is not possible to verify your account token</strong>,
  or do so quickly, <strong>requests will be given <em>The Benefit of the Doubt</em> and be queued for processing
  anyway</strong>. If later the request is later found to have an invalid API token it will be
  disregarded with out affect.

%p
  When the API has to give <em>The Benefit of the Doubt</em> it will respond with a <code>202</code> HTTP status code.
